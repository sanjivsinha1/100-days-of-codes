class Solution {
    
public:
   
    vector<int> searchRange(vector<int>& nums, int target) {
        vector<int> ans1;
        ans1.push_back(low(nums,target));
        ans1.push_back(high(nums,target));
        return ans1;
    }

    int low(vector<int>nums, int x){
        int s=0;
        int e=nums.size()-1;
        int mid=s+(e-s)/2;
        int ans=-1;

        while(s<=e){
            if(nums[mid]==x){
                ans=mid;
                e=mid-1;
            }
            else if(nums[mid]>x){
                e=mid-1;
            }
            else{
                s=mid+1;
            }
            mid=s+(e-s)/2;
        }
        return ans;
    }

    int high(vector<int>nums, int x){
        int s=0;
        int e=nums.size()-1;
        int mid=s+(e-s)/2;
        int ans=-1;

        while(s<=e){
            if(nums[mid]==x){
                ans=mid;
                s=mid+1;
            }
            else if(nums[mid]>x){
                e=mid-1;
            }
            else{
                s=mid+1;
            }
            mid=s+(e-s)/2;
        }
        return ans;
    }

    
};
