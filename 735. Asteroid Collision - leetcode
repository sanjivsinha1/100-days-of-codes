class Solution {
public:
    vector<int> asteroidCollision(vector<int>& ast) {
        int n=ast.size();
        stack<int> s;
        for(int i=0;i<n;i++){

            // adding all the +ve values to the stack 
            if(ast[i]>0 || s.empty()){
                s.push(ast[i]);
            }

            //deals with the negitive value 
            else{

                //the while loop will check stack top and id absolute value is greater then s.top() it will eliminate it 
                while(!s.empty() && abs(ast[i])>s.top()&& s.top()>0){
                    s.pop();
                }

                //here if both the values occurred have same value but oposite sign so it will pop that element
                if(!s.empty()&&abs(ast[i])==s.top()){
                    s.pop();
                }

                // it will add all the negative element if the stack is empty or if the value present in the top of the stack is negative
                else if(s.empty()||s.top()<0){
                    s.push(ast[i]);
                }
            }
        }

        // adding the answers from stack to the vector 
        vector<int> ans;
        while(!s.empty()){
            ans.push_back(s.top());
            s.pop();
        }
        
        //reversing the vector since the stack is FILO therefore the value is stored in reverse order
        reverse(ans.begin(),ans.end());

        return ans;
    }
};
