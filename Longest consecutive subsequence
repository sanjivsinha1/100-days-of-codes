//{ Driver Code Starts
#include <bits/stdc++.h>
using namespace std;


// } Driver Code Ends
class Solution{
  public:
    // arr[] : the input array
    // N : size of the array arr[]
    
    //Function to return length of longest subsequence of consecutive integers.
    int findLongestConseqSubseq(int arr[], int n)
    {
      //Your code here
       if(n==1)
      {
          return 1;
      }
      int currcount=0;
      int maxcount=0;
      vector<int>temp;
      vector<int>::iterator it;
      for(int i=0;i<n;i++)
      {
          temp.push_back(arr[i]);
      }
      sort(temp.begin(),temp.end());
      it=unique(temp.begin(),temp.end());
      temp.resize(distance(temp.begin(),it));

for(int i=0;i<temp.size()-1;i++)
      {
          if(temp[i]+1==temp[i+1])
          {
              currcount++;
              maxcount=max(maxcount,currcount);
          }
          else
          {
              currcount=0;
          }
      }
      return maxcount+1;
    }
};

//{ Driver Code Starts.
 
// Driver program
int main()
{
 int  t,n,i,a[100001];
 cin>>t;
 while(t--)
 {
  cin>>n;
  for(i=0;i<n;i++)
  cin>>a[i];
  Solution obj;
  cout<<obj.findLongestConseqSubseq(a, n)<<endl;
 }
      
    return 0;
}
