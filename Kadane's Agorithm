// { Driver Code Starts
#include<bits/stdc++.h>
using namespace std;


 // } Driver Code Ends
class Solution{
    public:
    // arr: input array
    // n: size of array
    //Function to find the sum of contiguous subarray with maximum sum.
    int maxSubarraySum(int arr[], int n){
       int maxs=arr[0],curs=0;
       
       //we initialize it with first element because if all the elements are negative and if we initialize it with zero then we will get wrong output as zero
       //ef- arr={-1,-2,-3,-4}
       //maxs = -1
       
       for(int i=0;i<n;i++){
           curs=max(arr[i],curs+arr[i]);
           if(curs>maxs){
               maxs=curs;
           }
           if(curs<0){
               curs=0;
           }
       }
       return maxs;
    }
};

// { Driver Code Starts.

int main()
{
    int t,n;
    
    cin>>t; //input testcases
    while(t--) //while testcases exist
    {
        
        cin>>n; //input size of array
        
        int a[n];
        
        for(int i=0;i<n;i++)
            cin>>a[i]; //inputting elements of array
            
        Solution ob;
        
        cout << ob.maxSubarraySum(a, n) << endl;
    }
}
  // } Driver Code Ends
