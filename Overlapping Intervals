#include<bits/stdc++.h>
using namespace std;

class Solution {
public:
    vector<vector<int>> overlappedInterval(vector<vector<int>>& intervals) {
         // Code here
         vector<vector<int>> temp;
         if(intervals.size()==0){
             return temp;
         }
         sort(intervals.begin(), intervals.end());
         vector<int> t = intervals[0];
         
         for(auto it:intervals){
             if(it[0]<=t[1]){
                 t[1]=max(it[1], t[1]);
             }
             else{
                 temp.push_back(t);
                 t=it;
             }
         }
         temp.push_back(t);
         return temp;
    }
};

int main(){
	int tc;
	cin >> tc;
	while(tc--){
		int n;
		cin >> n;
		vector<vector<int>>Intervals(n);
		for(int i = 0; i < n; i++){
			int x, y;
			cin >> x >> y;
			Intervals[i].push_back(x);
			Intervals[i].push_back(y);
		}
		Solution obj;
		vector<vector<int>> ans = obj.overlappedInterval(Intervals);
		for(auto i: ans){
			for(auto j: i){
				cout << j << " ";
			}
		}
		cout << "\n";
	}
	return 0;
}
